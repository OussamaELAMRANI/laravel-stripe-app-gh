on: [push, pull_request]
jobs:
  demo-ci-runner:
    runs-on: ubuntu-latest
    container: ubuntu:latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP with Xdebug
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        coverage: xdebug

    - name: Start mysql service
      run: sudo /etc/init.d/mysql start

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Prepare Laravel Application
      run: |
        cp .env.example .env
        php artisan key:generate

    - name: Setup Database
      run: |
        php artisan migrate --no-interaction -vvv
        php artisan db:seed

    - name: Run Testsuite with Coverage
      run: vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Upload coverage report
      run: "bash <(curl -s https://qa.codecov.dev/bash )"